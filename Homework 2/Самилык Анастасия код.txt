.data
	error: .asciz "Нельзя делить на ноль" 
	space: .asciz " " 
.text
	main:
	        li      a7 5        	# Системный вызов №5 — ввести десятичное число
	        ecall               	# Делимое — в регистре a0
	        mv      s0 a0       	# Сохраняем делимое в s0
	        ecall               	# Регистр a7 не менялся, тот же системный вызов
	        mv      s1 a0       	# Сохраняем делитель в s1
	        addi s3, s3, -1     	# Помещаем в регистр s3 число -1 для дальнейших вычислений
	        
		bne s1, zero, no_zero 	# Проверка на то, не является ли делитель нулем
		li a7, 4		# Системный вызов №4 - вывести null-terminated строку
		la a0, error		# Помещаем строку error в регистр a0
		ecall			# Выводим "Нельзя делить на ноль"
		li a0, 0             	# exit code
		li a7, 10           	# syscall exit
		ecall
	no_zero:
		add s2, s2, s0   	# Запишем в s2 значение делимого 
		bge zero, s0, else   	# Проверяем, больше ли делимое нуля
		j end_if		# Переход к end_if
	else:
		mul s2, s2, s3		# Умножаем делимое на -1 (если оно отрицательное), т.е. s2 = abs(s0)
		j end_if		# Переход к end_if
	end_if:
		add s4, s4, s1     	# Запишем в s4 значение делителя
		bge zero, s1, else_1  	# Проверим, больше ли делитель нуля
		j while			# переход к while 
	else_1:
		mul s4, s4, s3		# Умножаем делитель на -1 (если оно отрицательное), т.е. s4 = abs(s1)
		j while			# Переход к while
	while:
		blt s2, s4, end_while 	# Если значение в s2 >= значения в s4, выходим из цикла, в s2 - частное, в s6 - остаток
		sub s2, s2, s4 		# Вычитаем из s2 значение s4
		addi s6, s6, 1  	# Увеличим счетчик в регистре s6 на 1	
		j while			# Переход к while ( продолжение цикла)
	end_while:
		bge s0, zero, then	# Проверяем, больше ли делимое нуля
		mul s6, s6, s3		# Умножаем полученное "частное" на -1, ( в случае, если делимое больше нуля)
		mul s2, s2, s3		# Умножаем полученное "остаток" на -1, ( в случае, если делимое больше нуля)
	then:
		bge s1, zero, end	# Проверяем, больше ли делитель нуля
		mul s6, s6, s3		# Умножаем полученное "целое частное" на -1, ( в случае, если делимое больше нуля)
	end:
		li a7, 1		# Системный вызов №1 - вывести целове число
		mv a0, s6		# Поместим в а0 значение s6(частное)
		ecall			# Выводим частное от деления
		
		li a7, 4		# Системный вызов №4 - вывести null-terminated строку
		la a0, space		# Помещаем строку space в регистр a0 
		ecall			# Выводим пробел
		
		li a7, 1		# Системный вызов №1 - вывести целове число
		mv a0, s2		# Поместим в а0 значение s2(остаток)
		ecall			# Выводим остаток от деления
		
		li a0, 0            	# exit code
		li a7, 10           	# syscall exit
		ecall
		
		